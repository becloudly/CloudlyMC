name: Build and Package
on:
  push:
    branches: [ "master" ]
    # Only run the workflow if changes happen in these files or directories:
    paths:
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'gradle/**'
      - 'app/src/**'
      - '*.gradle.kts'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean shadowJar --no-daemon --build-cache
        env:
          # Optimize Gradle performance
          GRADLE_OPTS: "-Dorg.gradle.caching=true -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs='-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError'"

      - name: Find built JAR file
        id: find-jar
        run: |
          JAR_FILE=$(ls -t build/libs/cloudly*.jar | head -1)
          if [ -z "$JAR_FILE" ]; then
            echo "Error: No cloudly JAR file found in build/libs/"
            exit 1
          fi
          echo "jar-file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar-name=$(basename $JAR_FILE)" >> $GITHUB_OUTPUT
          echo "Found JAR file: $JAR_FILE"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v5
        with:
          name: 'cloudly-${{ steps.find-jar.outputs.jar-name }}'
          path: '${{ steps.find-jar.outputs.jar-file }}'